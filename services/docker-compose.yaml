version: '3.8'

services:
  # üîê Auth DB
  auth-db:
    image: postgres:15
    container_name: auth-db
    restart: always
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: auth_pass
    ports:
      - "5542:5432"
    volumes:
      - auth-db-data:/var/lib/postgresql/data
      - ./auth-service/db/init.sql:/docker-entrypoint-initdb.d/init.sql

  # üë§ User DB
  user-db:
    image: postgres:15
    container_name: user-db
    restart: always
    environment:
      POSTGRES_DB: user_db
      POSTGRES_USER: user_user
      POSTGRES_PASSWORD: user_pass
    ports:
      - "5543:5432"
    volumes:
      - user-db-data:/var/lib/postgresql/data
      - ./user-service/db/init.sql:/docker-entrypoint-initdb.d/init.sql

  # üí∞ Wallet DB
  wallet-db:
    image: postgres:15
    container_name: wallet-db
    restart: always
    environment:
      POSTGRES_DB: wallet_db
      POSTGRES_USER: wallet_user
      POSTGRES_PASSWORD: wallet_pass
    ports:
      - "5544:5432"
    volumes:
      - wallet-db-data:/var/lib/postgresql/data
      - ./wallet-service/db/init.sql:/docker-entrypoint-initdb.d/init.sql

  # üîî Notification DB
  notification-db:
    image: postgres:15
    container_name: notification-db
    restart: always
    environment:
      POSTGRES_DB: notification_db
      POSTGRES_USER: notification_user
      POSTGRES_PASSWORD: notification_pass
    ports:
      - "5545:5432"
    volumes:
      - notification-db-data:/var/lib/postgresql/data
      - ./notification-service/db/init.sql:/docker-entrypoint-initdb.d/init.sql

  # üêá RabbitMQ (Message Broker)
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"     # RabbitMQ main port
      - "15672:15672"   # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  # üîê Auth Service
  auth-service:
    build: ./auth-service
    container_name: auth-service
    restart: always
    depends_on:
      - auth-db
      - user-service
      - rabbitmq
    ports:
      - "3001:3001"
    environment:
      DATABASE_URL: postgres://auth_user:auth_pass@auth-db:5432/auth_db
      USER_SERVICE_URL: http://user-service:3002
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672

  # üë§ User Service
  user-service:
    build: ./user-service
    container_name: user-service
    restart: always
    depends_on:
      - user-db
      - rabbitmq
    ports:
      - "3002:3002"
    environment:
      DATABASE_URL: postgres://user_user:user_pass@user-db:5432/user_db
      AUTH_SERVICE_URL: http://auth-service:3001
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672

  # üí∞ Wallet Service
  wallet-service:
    build: ./wallet-service
    container_name: wallet-service
    restart: always
    depends_on:
      - wallet-db
      - auth-service
      - user-service
      - rabbitmq
    ports:
      - "3003:3003"
    environment:
      DATABASE_URL: postgres://wallet_user:wallet_pass@wallet-db:5432/wallet_db
      AUTH_SERVICE_URL: http://auth-service:3001
      USER_SERVICE_URL: http://user-service:3002
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672

  # üîî Notification Service
  notification-service:
    build: ./notification-service
    container_name: notification-service
    restart: always
    depends_on:
      - notification-db
      - rabbitmq
    ports:
      - "3004:3004"
    environment:
      DATABASE_URL: postgres://notification_user:notification_pass@notification-db:5432/notification_db
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672

volumes:
  auth-db-data:
  user-db-data:
  wallet-db-data:
  notification-db-data: